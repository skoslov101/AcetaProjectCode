function string = GetEchoString_newLine(window,msg,x,y,textColor,bgColor)% string = GetEchoString(window,msg,x,y,textColor,bgColor)% % Get a string typed at the keyboard. Entry is terminated by% <return> or <enter>.%% Typed characters are displayed in the window. The delete% character is handled correctly. Useful for i/o in a Screen window.%% See also: GetNumber, GetString, GetEchoNumber%% 2/4/97  dhb  Wrote GetEchoNumber.% 2/5/97  dhb  Accept <enter> as well as <cr>.%         dhb  Allow string return as well.% 3/3/97  dhb  Updated for new DrawText.  % 3/15/97 dgp  Created GetEchoString based on dhb's GetEchoNumber.% 3/20/97 dhb  Fixed bug in erase code, it wasn't updated for new%              initialization.% 3/31/97 dhb  More fixes for same bug.% 2/28/98 dgp  Use GetChar instead of obsolete GetKey. Use SWITCH and LENGTH.% 3/27/98 dhb  Put an abs around char in switch.% Write the message and a space% Screen(window,'DrawText',[msg '  '],x,y,textColor);yTop=200;screenRect= get( 0, 'Screensize' ); Xorigin = (screenRect(3)-screenRect(1))/2;yMid=(screenRect(4)-screenRect(1))/2;txtsize=32;msg=[msg '  '];% Write 'txt'strLength=length(msg); % Determine length of string for centering purposesfor i = 1:strLength % Cycle through character string    Screen(window,'TextSize',txtsize);    TextWidth=Screen(window,'TextWidth',msg{i});    TextHeight= strLength*(txtsize+5)-5; % Height of text body, giving 5 pixel buffer between each line of text    Screen(window,'DrawText',msg{i},Xorigin-TextWidth/2,yTop+(TextHeight*(i-1))/2,textColor);end% Determine position for first character%offset = Screen(window,'TextWidth',[msg '  ']);offset=1;string='';while 1	% Loop until <return> or <enter>	char= GetChar;	switch(abs(char))		case {13,3},	% <return> or <enter>			break;		case 8,			% <delete>			if length(string)>0				deletedChar = string(length(string));				string=string(1:length(string)-1);				offset = offset - Screen(window,'TextWidth',deletedChar);				%fprintf('Deleting %s at %g\n',deletedChar,offset);				Screen(window,'DrawText',deletedChar,Xorigin-10+offset,yMid,bgColor);   			end		otherwise,			string=[string char];            if rem(length(string),40)==0                y=y+30;                offset=15;                %fprintf('Drawing %s at %g\n',char,offset);                Screen(window,'DrawText',char,Xorigin-10+offset,yMid,textColor);                offset = offset + Screen(window,'TextWidth',char);            else                %fprintf('Drawing %s at %g\n',char,offset);                Screen(window,'DrawText',char,Xorigin-10+offset,yMid,textColor);                offset = offset + Screen(window,'TextWidth',char);            end			%fprintf('New offset is %g\n',offset);	endend% Erase the message% Screen(window,'DrawText',[msg '  ' string],x,y,bgColor);